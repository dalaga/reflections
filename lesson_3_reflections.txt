When would you want to use a remote repository rather than keeping all your work local?
 The remote repository allows you to share your work with others especially if you are working on a team. For example, others will be able to download your files and suggests changes or make comments. Having your files remotely allows you to access your files from any computer with an Internet connection.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	Because you do not want to accidently send changes that are not ready for commit or go live. It is much beter for you to control what is ready to commit than letting Git decide for you.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
        Forks is when you want to copy a repository on GitHub (Similar to Clone but used on GitHub only)
	Clones is when you want to copy a repository to your local drive.
	Branches is when you create alternative paths for your code. Used to test our features or changes without really effecting the 
	  the Master Branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

     Allows you to know what the latest state of the remote was when you pull in the remote. It also lets you compare changes added to the remote since you got your local copy. However, walking through the get fetch process, git status can give you an idea of the state of your local origin/master and the local master branch.

 How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

 	If I was not using Git or GitHub, I would probably be using Google Drive. I used Google Drive in the past to create and make changes to documents. Also tracking was done and sharing the folders for others to make changes. But I think you had to give permission to someone to change the file. Older versions were kept as the document went through changes. In comparison, I think that using Git and GitHub is much easier once you learn how to use the two together.... There is a learning curve.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	You would make a change in a different branch is you are testing someting or making modifications that you want to work with before mergin them into the master branch. It can also be a branch to collaborate with others via pull requests, finalized and then pull into the master. Branching out allows one to use pull requests to solicit changes and comments from others. Using the master can be beneficial is your project is small.

